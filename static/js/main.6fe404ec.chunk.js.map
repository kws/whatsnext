{"version":3,"sources":["components/Event.module.css","components/MadeByKaj.module.css","components/Welcome.module.css","components/Calendar.module.css","authConfig.js","utils/MsGraphApiCall.js","components/Event.js","components/MadeByKaj.js","components/Calendar.js","components/Welcome.js","App.js","index.js"],"names":["module","exports","ua","window","navigator","userAgent","msie","indexOf","msie11","msedge","firefox","msalConfig","auth","clientId","process","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","d","Date","setHours","setMinutes","setSeconds","start","toISOString","setDate","getDate","end","graphConfig","graphMeEndpoint","callMsGraph","a","account","msalInstance","getActiveAccount","acquireTokenSilent","response","headers","Headers","bearer","accessToken","append","options","method","fetch","then","json","catch","log","_0","value","padStart","getBlendColors","diff","alphaValue","Math","min","greenValue","max","redValue","r","easeInOutCubic","g","backgroundColor","formatCountdown","event","diffInSecs","floor","timeinfo","timeDiff","absDiff","abs","hours","minutes","seconds","timeRep","Event","flashClass","styles","flash","pastClass","past","className","classNames","style","time","startRep","title","subject","MadeByKaj","love","href","forkongithub","loadAndPrepareData","graphData","events","sort","b","dateTime","localeCompare","map","getHours","getMinutes","Calendar","inProgress","useMsal","useState","setEvents","getTime","setTime","useEffect","InteractionStatus","None","timer","setInterval","clearInterval","RELOAD_INTERVAL_IN_MINUTES","timeDiffSecs","offsetDiff","alertStatus","started","ended","currentEvents","filter","isAllDay","maxAlertStatus","reduce","currentTime","toLocaleTimeString","substring","replace","nextEvent","length","icon","Helmet","replaceAll","rel","timeDisplay","id","Welcome","instance","intro","msauth","onClick","acquireTokenPopup","App","Component","accounts","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","PublicClientApplication","getAllAccounts","setActiveAccount","addEventCallback","eventType","EventType","LOGIN_SUCCESS","payload","AppProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fe404ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"event\":\"Event_event__1P29_\",\"time\":\"Event_time__2-mok\",\"title\":\"Event_title__2DQ5v\",\"diff\":\"Event_diff__1q_Qg\",\"past\":\"Event_past__VN_ps\",\"flash\":\"Event_flash__3EET6\",\"alert\":\"Event_alert__1gP6J\",\"blinker\":\"Event_blinker__9dt53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"love\":\"MadeByKaj_love__39zpn\",\"forkongithub\":\"MadeByKaj_forkongithub__1xnhH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"Welcome_intro__2dT5r\",\"msauth\":\"Welcome_msauth__13C0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeDisplay\":\"Calendar_timeDisplay__3-YgE\"};","import { LogLevel } from \"@azure/msal-browser\";\n// Browser check variables\n// If you support IE, our recommendation is that you sign-in using Redirect APIs\n// If you as a developer are testing using Edge InPrivate mode, please add \"isEdge\" to the if check\nconst ua = window.navigator.userAgent;\nconst msie = ua.indexOf(\"MSIE \");\nconst msie11 = ua.indexOf(\"Trident/\");\nconst msedge = ua.indexOf(\"Edge/\");\nconst firefox = ua.indexOf(\"Firefox\");\nconst isIE = msie > 0 || msie11 > 0;\nconst isEdge = msedge > 0;\nconst isFirefox = firefox > 0; // Only needed if you need to support the redirect flow in Firefox incognito\n\n// Config object to be passed to Msal on creation\nexport const msalConfig = {\n    auth: {\n        clientId: process.env.REACT_APP_AZURE_CLIENT_ID,\n        authority: \"https://login.microsoftonline.com/common\",\n        redirectUri: \"/whatsnext/\"\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n        storeAuthStateInCookie: isIE || isEdge || isFirefox\n    },\n    system: {\n        loggerOptions: {\n            loggerCallback: (level, message, containsPii) => {\n                if (containsPii) {\n                    return;\n                }\n                switch (level) {\n                    case LogLevel.Error:\n                        console.error(message);\n                        return;\n                    case LogLevel.Info:\n                        console.info(message);\n                        return;\n                    case LogLevel.Verbose:\n                        console.debug(message);\n                        return;\n                    case LogLevel.Warning:\n                        console.warn(message);\n                        return;\n                    default:\n                        return;\n                }\n            }\n        }\n    }\n};\n\n// Add here scopes for id token to be used at MS Identity Platform endpoints.\nexport const loginRequest = {\n    scopes: [\"User.Read\", \"Calendars.Read\"]\n};\n\nconst d = new Date();\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0)\n\nconst start=d.toISOString();\n\nd.setDate(d.getDate() + 1)\n\nconst end=d.toISOString();\n\n// Add here the endpoints for MS Graph API services you would like to use.\nexport const graphConfig = {\n    graphMeEndpoint: `https://graph.microsoft.com/v1.0/me/calendar/calendarView?StartDateTime=${start}&EndDateTime=${end}`\n};","import { loginRequest, graphConfig } from \"../authConfig\";\nimport { msalInstance } from \"../index\";\n\nexport async function callMsGraph() {\n    const account = msalInstance.getActiveAccount();\n    if (!account) {\n        throw Error(\"No active account! Verify a user has been signed in and setActiveAccount has been called.\");\n    }\n\n    const response = await msalInstance.acquireTokenSilent({\n        ...loginRequest,\n        account: account\n    });\n\n    const headers = new Headers();\n    const bearer = `Bearer ${response.accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n\n    return fetch(graphConfig.graphMeEndpoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}","import React from 'react'\nimport {easeInOutCubic} from 'js-easing-functions';\nimport styles from './Event.module.css';\nimport classNames from 'classnames';\n\nconst _0 = (value) => {\n    return `${value}`.padStart(2, '0')\n}\n\nconst getBlendColors = diff => {\n    // 900 - 15 minutes\n    // 600 - 10 minutes\n    // 300 - 5 minutes\n    if (diff > 900 | diff < -300) {\n        return {}\n    }\n    const alphaValue = Math.min(300, 900 - diff);\n    const greenValue = Math.max(0, Math.min(300, diff));\n    const redValue = Math.max(0, Math.min(300, 600-diff));\n\n    const r = easeInOutCubic(redValue, 0, 128, 300);\n    const g = easeInOutCubic(greenValue, 0, 128, 300);\n    const a = easeInOutCubic(alphaValue, 0, 1,300);\n\n    return {backgroundColor: `rgba(${r}, ${g}, 0, ${a})`};\n}\n\nexport const formatCountdown = (event) => {\n    const diffInSecs = Math.floor(event.timeinfo.timeDiff / 1000);\n    const absDiff = Math.abs(diffInSecs);\n    const hours = Math.floor(absDiff /  3600 )\n    const minutes = Math.floor(absDiff / 60 - (hours * 60))\n    const seconds = Math.floor(absDiff - (hours * 3600) - (minutes * 60))\n\n    let timeRep = \"\";\n    if (event.timeinfo.timeDiff < 0) {\n        timeRep += 'T+ ';\n    }\n    if (hours > 0) {\n        timeRep += `${hours}h ${_0(minutes)}m`;\n    } else if (minutes > 9) {\n        timeRep += `${minutes}m`;\n    } else {\n        timeRep += `${minutes}m ${_0(seconds)}s`;\n    }\n    return timeRep;\n}\n\nconst Event = ({event}) => {\n    const diffInSecs = Math.floor(event.timeinfo.timeDiff / 1000);\n    const flashClass = diffInSecs <= 60 && diffInSecs > -300 ? styles.flash: '';\n    const pastClass = diffInSecs < -300 ? styles.past: '';\n\n    const timeRep = formatCountdown(event);\n\n    return (\n        <li className={classNames(styles.event, flashClass, pastClass)}\n            style={diffInSecs > 60 ? getBlendColors(diffInSecs) : {}}>\n            <span className={styles.time}>{event.timeinfo.startRep}</span>\n            <span className={styles.title}>{event.subject}</span>\n            <span className={styles.diff}>{timeRep}</span>\n        </li>\n    )\n};\n\nexport default Event;","import React from 'react'\nimport styles from './MadeByKaj.module.css';\n\nconst MadeByKaj = () => {\n    return (\n        <>\n            <footer className={styles.love}>\n                <div>Made with ❤️ by <a href=\"https://github.com/kws\">Kaj</a></div>\n            </footer>\n            <span className={styles.forkongithub}>\n                <a href=\"https://github.com/kws/whatsnext\">Fork me on GitHub</a>\n            </span>\n        </>\n\n    )\n}\n\nexport default MadeByKaj;","import React from 'react'\nimport { useEffect, useState } from \"react\";\nimport {Helmet} from \"react-helmet\";\n\nimport { useMsal } from \"@azure/msal-react\";\nimport { InteractionStatus } from \"@azure/msal-browser\";\n\nimport { callMsGraph } from \"../utils/MsGraphApiCall\";\nimport Event, {formatCountdown} from \"./Event\";\nimport MadeByKaj from \"./MadeByKaj\";\nimport styles from \"./Calendar.module.css\";\n\nconst RELOAD_INTERVAL_IN_MINUTES = 1;\n\nconst loadAndPrepareData = async () => {\n    const graphData = await callMsGraph();\n    const events = (graphData && graphData.value) ? graphData.value : [];\n    events.sort((a, b) => a.start.dateTime.localeCompare(b.start.dateTime));\n    events.map(event => {\n        const start = new Date(event.start.dateTime+\"Z\")\n        const end = new Date(event.end.dateTime+\"Z\")\n        const startRep = `${start.getHours()}`.padStart(2, '0') + ':' +`${start.getMinutes()}`.padStart(2, '0')\n        event.timeinfo = {start, end, startRep}\n        return event;\n    });\n    console.log(\"events\", events);\n    return events;\n};\n\nconst Calendar = () => {\n    const { inProgress } = useMsal();\n    const [events, setEvents] = useState([]);\n    const [time, setTime] = useState(new Date().getTime());\n\n    useEffect(() => {\n        if (inProgress === InteractionStatus.None) {\n            loadAndPrepareData().then(events => {\n                setEvents(events);\n            });\n        }\n    }, [inProgress]);\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setTime(new Date().getTime());\n        }, 1000);\n        return () => {\n            console.log(\"Stopping timer\");\n            clearInterval(timer);\n        }\n    },[]);\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            if (inProgress === InteractionStatus.None) {\n                loadAndPrepareData().then(events => {\n                    setEvents(events);\n                });\n            }\n        }, RELOAD_INTERVAL_IN_MINUTES * 60 * 1000);\n        return () => {\n            console.log(\"Stopping timer\");\n            clearInterval(timer);\n        }\n    }, [inProgress]);\n\n    events.map(event => {\n        event.timeinfo.timeDiff = event.timeinfo.start - time;\n        event.timeinfo.timeDiffSecs = Math.floor(event.timeinfo.timeDiff / 1000);\n\n        const offsetDiff = Math.min(1200, event.timeinfo.timeDiffSecs + 300);\n        event.timeinfo.alertStatus = offsetDiff > 0 ? 1200 - offsetDiff : 0;\n\n        event.timeinfo.started = event.timeinfo.start >= time;\n        event.timeinfo.ended = event.timeinfo.end >= time;\n        return event;\n    });\n\n    const currentEvents = events.filter(event => event.timeinfo.ended && !event.isAllDay)\n\n    const maxAlertStatus = events.reduce((value, event) => Math.max(value, event.timeinfo.alertStatus), 0)\n\n    let currentTime = new Date(time).toLocaleTimeString().substring(0, 5)\n    if ((Math.floor(time / 1000)) % 2 === 0) {\n        currentTime = currentTime.replace(\":\", \" \");\n    }\n\n    const nextEvent = currentEvents.length > 0 ? currentEvents[0] : null;\n    let icon = '1-favicon.ico';\n    if (maxAlertStatus > 600) {\n        icon = maxAlertStatus % 2 === 0 ? '3-favicon.ico' : 'alert-favicon.ico';\n    } else if (maxAlertStatus > 400) {\n        icon = '2-favicon.ico';\n    }\n\n    return (\n        <>\n            <Helmet>\n                <title>{nextEvent ? `${formatCountdown(nextEvent).replaceAll(' ', '')} ${nextEvent.subject}` : \"WhatsNext\"}</title>\n                <link rel=\"icon\" href={process.env.PUBLIC_URL + `/${icon}`} />\n            </Helmet>\n            <div className={styles.timeDisplay}>{currentTime}</div>\n            <ul>\n                {currentEvents.map(event => <Event key={event.id} event={event}/>)}\n            </ul>\n            <MadeByKaj />\n        </>\n    )\n\n}\n\nexport default Calendar;","import React from 'react'\nimport {loginRequest} from \"../authConfig\";\nimport {useMsal} from \"@azure/msal-react\";\nimport styles from \"./Welcome.module.css\";\n\n\nconst Welcome = () => {\n    const { instance } = useMsal();\n\n    return (\n        <div className={styles.intro}>\n            <h1>What's Next?</h1>\n            <p>\n                Do you ever look at the calendar, or get a reminder from Outlook that you have a meeting\n                starting in 10 minutes? Just enough time to answer a couple of emails... and then suddenly you\n                are 10 minutes late instead?\n            </p>\n            <p>\n                What's Next is an unobtrusive countdown until your next Zoom...\n            </p>\n            <div className={styles.msauth} >\n                <button onClick={() => instance.acquireTokenPopup(loginRequest)}>\n                    <span>Login</span>\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Welcome;","import React from 'react'\nimport { useMsal } from \"@azure/msal-react\";\nimport Calendar from \"./components/Calendar\";\nimport Welcome from \"./components/Welcome\";\nimport MadeByKaj from \"./components/MadeByKaj\";\n\nexport function App() {\n    const { accounts, inProgress } = useMsal();\n\n    let Component;\n    if (accounts.length > 0) {\n        Component = Calendar;\n    } else if (inProgress === \"login\") {\n        Component = () => <div>Login is currently in progress!</div>;\n    } else {\n        Component = Welcome;\n    }\n\n\n    return (\n        <>\n            <Component />\n            <MadeByKaj />\n        </>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { PublicClientApplication, EventType } from \"@azure/msal-browser\";\nimport { msalConfig } from \"./authConfig\"\nimport './index.css';\nimport App from './App';\n\nSentry.init({\n    dsn: \"https://c42f3190b1094dd4b4dd426834da98c6@o108858.ingest.sentry.io/5662792\",\n    integrations: [new Integrations.BrowserTracing()],\n    tracesSampleRate: 1.0,\n});\n\nexport const msalInstance = new PublicClientApplication(msalConfig);\n\nconst accounts = msalInstance.getAllAccounts();\nif (accounts.length > 0) {\n    msalInstance.setActiveAccount(accounts[0]);\n}\n\nmsalInstance.addEventCallback((event) => {\n    console.log(\"msalInstance event\", event)\n    if (event.eventType === EventType.LOGIN_SUCCESS && event.payload.account) {\n        const account = event.payload.account;\n        msalInstance.setActiveAccount(account);\n    }\n});\n\n// Component\nconst AppProvider = () => (\n    <MsalProvider instance={msalInstance}>\n        <App />\n    </MsalProvider>\n);\n\n\nReactDOM.render(<AppProvider />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}